#beginLightCommonToolV3("tool.structuretool.publishSiteNode.header" "$!siteNodeId" "" false true $!disableCloseButton)

<link rel="stylesheet" type="text/css" href="css/cms.css" />

<script type="text/javascript">
<!--
		function checkMarkedVersions()
		{
			var listForm = document.listForm;
			var lengthselSiteNodeVersions = null;
			var lengthselContentVersions = null;
			var lengthsit = null;
			var ret = 0;
			if (listForm.selSiteNodeVersions != null)
				lengthselSiteNodeVersions = listForm.selSiteNodeVersions.length;
			if (listForm.selContentVersions != null)				
				lengthselContentVersions = listForm.selContentVersions.length;
			if (listForm.sit != null)
				lengthsit = listForm.sit.length;

			if (lengthselSiteNodeVersions == null && listForm.selSiteNodeVersions != null)
		  	{
		  		if (listForm.selSiteNodeVersions.checked)
			    	ret++;
		  	}
			else
			{
			  	for (i=0; i<lengthselSiteNodeVersions; i++)
			   		if (listForm.selSiteNodeVersions[i].checked)
			    		ret++;
			}

			if (lengthselContentVersions == null && listForm.selContentVersions != null)
		  	{
		  		if (listForm.selContentVersions.checked)
			    	ret++;
		  	}
			else
			{
			  	for (i=0; i<lengthselContentVersions; i++)
			   		if (listForm.selContentVersions[i].checked)
			    		ret++;
			}
			    		
			if (lengthsit == null && listForm.sit != null)
		  	{
		  		if (listForm.sit.checked)
			    	ret++;
		  	}
		  	else
		  	{
			  	for (i=0; i<lengthsit; i++)
			   		if (listForm.sit[i].checked)
			    		ret++;
			}
		    		
			return ret;
		}

		function checkUncheckAll(checkbox)
		{
			if(checkbox.checked)
				checkAll();
			else
				uncheckAll();				
		}

		function checkAll()
		{
			checkAllBoxes(document.listForm.selSiteNodeVersions);
			checkAllBoxes(document.listForm.selContentVersions);					
		}

		function uncheckAll()
		{
			uncheckAllBoxes(document.listForm.selSiteNodeVersions);
			uncheckAllBoxes(document.listForm.selContentVersions);		
		}
				
		
		function submitToPublish(attemptDirectPublishing)
		{
			var listForm = document.listForm;
			var commentElm = document.getElementById("xversionComment");
			
			/*
			if (commentElm.value == "")
			{
				alert('You must state a comment');
			  	return;
			}
			*/
			if (commentElm.value.length > 255)
			{
				alert('The comment is to long - only 255 characters allowed.');
			  	return;
			}
			
			var overrideVersionModifyerElm = document.getElementById("xoverrideVersionModifyer");
			if (checkMarkedVersions() == 0)
			{
				alert('Select one or more versions to publish');
			  	return;
			}
			else
			{
				listForm.action = "ChangeMultiSiteNodeVersionStatePublish.action"
				listForm.versionComment.value = commentElm.value;

				if(overrideVersionModifyerElm)
				{
					if(overrideVersionModifyerElm.checked == true)
						listForm.overrideVersionModifyer.value = overrideVersionModifyerElm.value;
					else
						listForm.overrideVersionModifyer.value = "false";
				}
				else
					listForm.overrideVersionModifyer.value = "true";
					
				#if($allowPublicationEventFilter == "true")
					var xrecipientFilter = document.getElementById("xrecipientFilter");
					if(xrecipientFilter)
					{
						#if($defaultPublicationEventFilter == "emailBased")
							jQuery.getJSON("ViewCommonAjaxServices!userSearch.action", { "q": "" + xrecipientFilter.value, "fieldToMatchExact": "email" }, function(data) { 
							
								console.log(data.users.length); 
								
								if(data.users.length == 0)
									alert("$ui.getString("tool.common.noUserWithEmailFound.warning")");
								else
								{
									listForm.recipientFilter.value = xrecipientFilter.value;
									listForm.attemptDirectPublishing.value = attemptDirectPublishing;
									listForm.submit();
								}
							});
							return false;									

						#else
							#if($infoGluePrincipal.groups.size() > 1)
								listForm.recipientFilter.value = xrecipientFilter.options[xrecipientFilter.selectedIndex].value;
							#else
								listForm.recipientFilter.value = xrecipientFilter.value;
							#end
						#end
					}
				#end
							
				listForm.attemptDirectPublishing.value = attemptDirectPublishing;
				listForm.submit();
			}
		}
		
		function showUsers()
		{
			openPopup('ViewListSystemUser!userListForPopupV3.action', 'Users', 'width=400,height=600,resizable=yes,scrollbars=yes');
		}
		
		function selectUser(userName)
		{
			//$("#xrecipientFilter").val(userName);
		}

		function selectEmail(email)
		{
			$("#xrecipientFilter").val(email);
		}

		$(document).ready(function(){
			setTimeout("resizeInlineTabDivs()", 100);
		});
			
-->
</script>

<div>
    
	#lightMenuToolbar("" $buttons $rightButtons) 

	<div style="clear: both;"></div>

	<h3>$ui.getString("tool.common.publishing.publishHeader")</h3>
			
	<div class="inlineTabDiv">	
	
	<table width="95%" border="0">
	<tr>
		<td>
			<table width="90%" border="0" cellpadding="0" cellspacing="0">
			
				#if($!this.allowOverrideModifyer != "false")
				<tr>
					<td colspan="3">#yesNoCheckBox("SiteNodeVersion.overrideVersionModifyer" "xoverrideVersionModifyer" "true" $ui.getString('tool.common.yes'))<br/><br/></td>
				</tr>	
				#end
				
				#if($this.hasAccessTo("Common.SubmitToPublishButton", true, false, false))
					#if($allowPublicationEventFilter == "true")
						#if($defaultPublicationEventFilter == "emailBased")
							<tr>
								<td colspan="3">
									$ui.getString("tool.common.recipientEmail.label")<br>
									<input type="text" name="xrecipientFilter" id="xrecipientFilter" class="longtextfield" style="float: left;"/><a class="showUsers" href="javascript:showUsers();" style="display: block; float:left; height: 20px; width: 20px; background: url(css/images/spyglassIcon.gif) no-repeat 0px 0px; margin-left: 4px;">&nbsp;</a>
								</td>
							</tr>		
						#else
							#if($infoGluePrincipal.groups.size() > 1)
								<tr>
									<td colspan="3">
										$ui.getString("tool.common.recipientFilter.label")<br>
										<select name="xrecipientFilter" id="xrecipientFilter">
											<option value="">$ui.getString("entity.ServerNode.property.nonePublishersFilter.label")</option>
											<!--<option value="all">$ui.getString("entity.ServerNode.property.allPublishersFilter.label")</option>-->
											<option value="groupBased" selected="1">$ui.getString("entity.ServerNode.property.groupBasePublishersFilter.label")</option>
											#if($infoGluePrincipal.groups.size() > 1)
												#foreach($group in $infoGluePrincipal.groups)
													<option value="groupNameBased_$group.name">$ui.getString("entity.ServerNode.property.groupNameBasedPublisherFilter.label") $group.name</option>
												#end
											#end
										</select>
									</td>
								</tr>		
							#else
								<input type="hidden" name="xrecipientFilter" id="xrecipientFilter" value="groupBased"/>		
							#end	
						#end
					#end
				#end
				
				#if($this.skipVersionComment == false)
					<tr>
						<td colspan="3">#editTextArea("SiteNodeVersion.versionComment" "xversionComment" $!versionComment "10" "5" "tinytextarea")</td>
					</tr>		
				#else
					<input type="hidden" name="xversionComment" id="xversionComment" value=""/>		
				#end		
			</table>
			<br/>
		</td>
		<td align="right" valign="top">
			<br>
		</td>
	</tr>
	<tr>
		<td colspan="2">
			$ui.getString("tool.common.publishing.markVersionsText")
		</td>
	</tr>
	<tr>
		<td colspan="2">
	
	#set($lvBorder = 0) 
	#set($lvConstraint = -1) 
	#set($nameHeader = $ui.getString("tool.common.publishing.nameLabel"))
	#set($typeHeader = $ui.getString("tool.common.publishing.typeLabel"))
	#set($changedHeader = $ui.getString("tool.common.publishing.changedLabel"))
	#set($modifyerHeader = $ui.getString("tool.common.publishing.modifyerLabel"))
	#lvHeadV3(["$nameHeader", "$typeHeader", "$changedHeader", "$modifyerHeader"] "Publish items" "" "" "", true)
	
	#hiddenField("siteNodeId" $siteNodeId)
	#hiddenField("languageId" $languageId)
	#hiddenField("siteNodeVersionId" $siteNodeVersionId)
	#hiddenField("versionComment" $!versionComment)
	#hiddenField("overrideVersionModifyer" $!overrideVersionModifyer)
	#hiddenField("recipientFilter" $!recipientFilter)
	#hiddenField("attemptDirectPublishing" $!attemptDirectPublishing)
	#hiddenField("repositoryId" $!repositoryId)
	#hiddenField("returnAddress" $!returnAddress)
	#hiddenField("userSessionKey" $!userSessionKey)
	#hiddenField("disableCloseButton" $!disableCloseButton)		
	
	#set($lvChkBoxName = "selSiteNodeVersions")
	
	#set($cnt = 0)
	#foreach($snv in $siteNodeVersionVOList)
		#set($displayName = "$!this.getInfoGluePrincipal($snv.versionModifier).displayName")
		#if($displayName == "")
			#set($displayName = "$snv.versionModifier")
		#end
				
		#set( $row = ["<img src='css/images/v3/pageIcon.gif'> $this.getSiteNodePath($snv.siteNodeId) ($snv.getId())", $ui.getString("tool.common.publishing.typePageLabel"), "$formatter.formatDate($snv.modifiedDateTime, 'yyyy-MM-dd')", "$displayName"] )
		#set($cnt = $cnt + 1)
		
		#lvAddRowV3($row $cnt $snv.id false)
	
	#end
	
	
	#set($lvChkBoxName = "selContentVersions")
	
	##set($cnt = 0)
	#foreach($cv in $contentVersionVOList)
		#set($displayName = "$!this.getInfoGluePrincipal($cv.versionModifier).displayName")
		#if($displayName == "")
			#set($displayName = "$cv.versionModifier")
		#end
		
		#set( $row = ["<img src='css/images/v3/contentIcon.gif'> $this.getContentPath($cv.contentId).replaceAll(' ', '&nbsp;') ($this.getLanguageVO($cv.languageId).name - $cv.getId())", $ui.getString("tool.common.publishing.typeContentLabel"), "$formatter.formatDate($cv.modifiedDateTime, 'yyyy-MM-dd')", "$displayName"] )
		#set($cnt = $cnt + 1)
		
		#lvAddRowV3($row $cnt $cv.id false)
	
	#end
	
	
	#lvEnd()
	</td>
	</tr>
	</table>

	</div>
		
	#lightFooterToolbar($footerButtons)
	
</div>

#endCommonToolV3()
