#beginLightCommonToolV3("tool.structuretool.unpublishSiteNode.header" "$!siteNodeId" "" false true $!disableCloseButton)

<link rel="stylesheet" type="text/css" href="css/cms.css" />

<script type="text/javascript">
<!--
		function checkMarkedVersions()
		{
			var listForm = document.listForm;
			var lengthsel = null;
			var lengthsit = null;
			var ret = 0;
			if (listForm.sel != null)
				lengthsel = listForm.sel.length;
			if (listForm.sit != null)
				lengthsit = listForm.sit.length;

			if (lengthsel == null && listForm.sel != null)
		  	{
		  		if (listForm.sel.checked)
			    	ret++;
		  	}
			else
			{
			  	for (i=0; i<lengthsel; i++)
			   		if (listForm.sel[i].checked)
			    		ret++;
			}
			    		
			if (lengthsit == null && listForm.sit != null)
		  	{
		  		if (listForm.sit.checked)
			    	ret++;
		  	}
		  	else
		  	{
			  	for (i=0; i<lengthsit; i++)
			   		if (listForm.sit[i].checked)
			    		ret++;
			}
		    		
			return ret;
		}
		
		function checkUncheckAll(checkbox)
		{
			if(checkbox.checked)
				checkAll();
			else
				uncheckAll();				
		}
		
		function checkAll()
		{
			checkAllBoxes(document.listForm.sel);
		}

		function uncheckAll()
		{
			uncheckAllBoxes(document.listForm.sel);
		}

		
		function submitToPublish(attemptDirectPublishing)
		{
			var listForm = document.listForm;
			var commentElm = document.getElementById("xversionComment");
			
			/*
			if (commentElm.value == "")
			{
				alert('You must state a comment');
			  	return;
			}
			*/
			if (commentElm.value.length > 255)
			{
				alert('The comment is to long - only 255 characters allowed.');
			  	return;
			}
			
			var overrideVersionModifyerElm = document.getElementById("xoverrideVersionModifyer");
			if (checkMarkedVersions() == 0)
			{
				alert('Select one or more pages to unpublish');
			  	return;
			}
			else
			{
				#if($unpublishAll)
				if(attemptDirectPublishing == "false" || confirm("$ui.getString("tool.structuretool.unpublishSiteNode.warning")"))
				#else
				if(attemptDirectPublishing == "false" || confirm("$ui.getString("tool.structuretool.unpublishSiteNodeLatestVersion.warning")"))
				#end
				{
					#if($unpublishAll)
						listForm.action = "UnpublishSiteNodeVersion!unpublishAll.action"
					#else
						listForm.action = "UnpublishSiteNodeVersion!unpublishLatest.action"
					#end
		
					listForm.versionComment.value = commentElm.value;

					if(overrideVersionModifyerElm)
					{
						if(overrideVersionModifyerElm.checked == true)
							listForm.overrideVersionModifyer.value = overrideVersionModifyerElm.value;
						else
							listForm.overrideVersionModifyer.value = "false";
					}
					else
						listForm.overrideVersionModifyer.value = "true";

					#if($allowPublicationEventFilter == "true")
						var xrecipientFilter = document.getElementById("xrecipientFilter");
						if(xrecipientFilter)
						{
							#if($defaultPublicationEventFilter == "emailBased")
								document.getElementById("processDiv").style.display = 'block';
								jQuery.getJSON("ViewCommonAjaxServices!userSearch.action", { "q": "" + xrecipientFilter.value, "fieldToMatchExact": "email" }, function(data) { 
								
									if(data.users.length == 0 && attemptDirectPublishing == 'false')
									{
										document.getElementById("processDiv").style.display = 'none';
										alert("$ui.getString("tool.common.noUserWithEmailFound.warning")");
									}
									else
									{
										listForm.recipientFilter.value = xrecipientFilter.value;
										listForm.attemptDirectPublishing.value = attemptDirectPublishing;
										listForm.submit();
									}
								});
								return false;									
							#else
								#if($infoGluePrincipal.groups.size() > 1)
									listForm.recipientFilter.value = xrecipientFilter.options[xrecipientFilter.selectedIndex].value;
								#else
									listForm.recipientFilter.value = xrecipientFilter.value;
								#end
							#end
						}
					#end
								
					listForm.attemptDirectPublishing.value = attemptDirectPublishing;
					listForm.submit();
				}
			
			}
		}

		function showUsers()
		{
			openPopup('ViewListSystemUser!userListForPopupV3.action', 'Users', 'width=400,height=600,resizable=yes,scrollbars=yes');
		}
		
		function selectUser(userName)
		{
			//$("#xrecipientFilter").val(userName);
		}

		function selectEmail(email)
		{
			$("#xrecipientFilter").val(email);
		}

		$(document).ready(function(){
			setTimeout("resizeInlineTabDivs()", 100);
		});
			
-->
</script>

<div>
    
	#lightMenuToolbar("" $buttons $rightButtons) 

	<div style="clear: both;"></div>

	#if($unpublishAll)
		<h3>$ui.getString("tool.structuretool.unpublishSiteNode.header")</h3>
	#else
		<h3>$ui.getString("tool.structuretool.unpublishSiteNodeLatestVersion.header")</h3>
	#end
		
	<div class="inlineTabDiv">	
		

	<p>
		#if($this.hasAccessTo("Common.SubmitToPublishButton", true, false, false))
			#set($repoPublicationFilter = "$this.getRepositoryExtraProperty($!repositoryId, 'publicationEventFilter')")
			#if($allowPublicationEventFilter == "true" && $repoPublicationFilter != "groupBased")
				#if($defaultPublicationEventFilter == "emailBased")
					$ui.getString("tool.common.recipientEmail.label")<br>
					<input type="text" name="xrecipientFilter" id="xrecipientFilter" class="longtextfield"/><a class="showUsers" href="javascript:showUsers();" style="display: inline-block; height: 20px; width: 20px; background: url(css/images/spyglassIcon.gif) no-repeat 0px 0px; margin-left: 4px;">&nbsp;</a>
				#else
					#if($infoGluePrincipal.groups.size() > 1)
						$ui.getString("tool.common.recipientFilter.label")<br>
						<select name="xrecipientFilter" id="xrecipientFilter">
							<option value="">$ui.getString("entity.ServerNode.property.nonePublishersFilter.label")</option>
							<!--<option value="all">$ui.getString("entity.ServerNode.property.allPublishersFilter.label")</option>-->
							<option value="groupBased" selected="1">$ui.getString("entity.ServerNode.property.groupBasePublishersFilter.label")</option>
							#if($infoGluePrincipal.groups.size() > 1)
								#foreach($group in $infoGluePrincipal.groups)
									<option value="groupNameBased_$group.name">$ui.getString("entity.ServerNode.property.groupNameBasedPublisherFilter.label") $group.name</option>
								#end
							#end
						</select>
					#else
						<input type="hidden" name="xrecipientFilter" id="xrecipientFilter" value="groupBased"/>		
					#end	
				#end
			#end
		#end
	</p>
	#if($this.skipVersionComment == false)
		<p>#editTextArea("SiteNodeVersion.versionComment" "xversionComment" $!versionComment "10" "5" "tinytextarea")</p>
	#else
		<input type="hidden" name="xversionComment" id="xversionComment" value=""/>		
	#end			
		<p>#yesNoCheckBox("SiteNodeVersion.overrideVersionModifyer" "xoverrideVersionModifyer" "true" $ui.getString('tool.common.yes'))</p>
				
	<p>
		$ui.getString("tool.common.unpublishing.markPagesText")
	</p>
	
	<table width="95%" border="0">
	<tr>
		<td colspan="2">
	
	#set($lvBorder = 0) 
	#set($lvConstraint = -1) 
	#set($nameHeader = $ui.getString("tool.common.publishing.nameLabel"))
	#set($typeHeader = $ui.getString("tool.common.publishing.typeLabel"))
	#set($changedHeader = $ui.getString("tool.common.publishing.changedLabel"))
	#set($modifyerHeader = $ui.getString("tool.common.publishing.modifyerLabel"))
	#lvHeadV3(["$nameHeader", "$changedHeader", "$modifyerHeader"] "Unpublish items" "" "" "", true)
	
	#hiddenField("siteNodeId" $siteNodeId)
	#hiddenField("languageId" $languageId)
	#hiddenField("siteNodeVersionId" $siteNodeVersionId)
	#hiddenField("versionComment" $!versionComment)
	#hiddenField("overrideVersionModifyer" $!overrideVersionModifyer)
	#hiddenField("recipientFilter" $!recipientFilter)
	#hiddenField("attemptDirectPublishing" $!attemptDirectPublishing)
	#hiddenField("repositoryId" $!repositoryId)
	#hiddenField("returnAddress" $!returnAddress)
	#hiddenField("userSessionKey" $!userSessionKey)
	#hiddenField("disableCloseButton" $!disableCloseButton)		
	#hiddenField("unpublishAll" $!unpublishAll)		
	
	#set($lvChkBoxName = "sel")

	#set($cnt = 0)
	#foreach($siteNode in $siteNodes)
		#set($snv = $this.getLatestSiteNodeVersion($siteNode))

		#set($displayName = "$!this.getInfoGluePrincipal($snv.versionModifier).displayName")
		#if($displayName == "")
			#set($displayName = "$snv.versionModifier")
		#end
		
		#set( $row = ["<img src='css/images/v3/pageIcon.gif'> $this.getLocalizedSiteNodePath($siteNode.id) ($siteNode.getId())", "$formatter.formatDate($snv.modifiedDateTime, 'yyyy-MM-dd')", "$displayName"] )
		#set($cnt = $cnt + 1)
		
		#lvAddRowV3($row $cnt $siteNode.id false)
	
	#end
		
	
	#lvEnd()
	</td>
	</tr>
	</table>

	</div>
		
	#lightFooterToolbar($footerButtons)
	
</div>

#endCommonToolV3()
